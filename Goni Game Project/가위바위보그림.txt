 puts("    ┏━┳━┳━┳━┓");
 puts("    ┃▒┃▒┃▒┃▒┃");
 puts("    ┃▒┃▒┃▒┃▒┃┓ ");
 puts("┏━┃▒┃▒┃▒┃▒┃┃ ");
 puts("┃  ┃▒┃▒┃▒┃▒┃┃ ");
 puts("┗┓▒▒▒▒▒▒▒▒┃┃ ");
 puts("  ┗┓▒▒▒▒▒▒▒┏┛");
 puts("    ┗┓▒▒▒▒▒┏┛");


puts("    ┏━┳━┳━┳━┓");
puts("    ┃▒┃▒┃▒┃▒┃┓ ");
puts("  ┏┻━┻━┓━┛━┛┃ ");
puts("  ┃▒┏━━┛▒▒▒▒┃ ");
puts("  ┗┓▒▒▒▒▒▒▒┏┛");
puts("    ┗┓▒▒▒▒▒┏┛");

 puts("    ┏━┳━┓ ");
 puts("    ┃▒┃▒┃ ");
 puts("    ┃▒┃▒┃━┳━┓ ");
 puts("  ┏┻━┻━┓▒┃▒┃┓ ");
 puts("  ┃▒┏━━┛━┛━┛┃ ");
 puts("  ┗┓▒▒▒▒▒▒▒▒┃");
 puts("    ┗┓▒▒▒▒▒▒┏┛");
 puts("      ┗┓▒▒▒▒┏┛");




		// *********************** 내 벽 생성 ************************* //
		for( i = 0; sizeof(Me) / sizeof(Me[0]); i ++) 
		{
			gotoxy(45, i+5);
			for ( j = 0; j < sizeof(Me[0]); j ++)
			{
				if(Me[i][j] == 0)
				{
					printf("  ");
				} else if ( Me[i][j] == 2)
				{
					WHITE;
					printf("■");
					GRAY;
				}
			}
		}

	// *********************** 컴퓨터 벽 생성 *************************** //
		for( i = 0; sizeof(Com) / sizeof(Com[0]); i ++) 
		{
			gotoxy(45, i+27);
			for ( j = 0; j < sizeof(Com[0]); j ++)
			{
				if(Com[i][j] == 0)
				{
					printf("  ");
				} else if ( Com[i][j] == 2)
				{
					WHITE;
					printf("■");
					GRAY;
				}
			}
		}